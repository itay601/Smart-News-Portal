
// Main Dashboard Component
const Dashboard = () => {
    const [activePage, setActivePage] = useState('Dashboard');
    const [isSidebarOpen, setSidebarOpen] = useState(true);
    const [isMobileMenuOpen, setMobileMenuOpen] = useState(false);
    const [isLoggedIn, setIsLoggedIn] = useState(false);

    const handleSignIn = () => setIsLoggedIn(true);
    const handleSignOut = () => setIsLoggedIn(false);

    const renderPage = () => {
        switch (activePage) {
            case 'Dashboard':
                return <DashboardHome />;
            case 'Chat Agent':
                return <ChatAgentPage />;
            case 'Agent Analysis':
                return <AgentAnalysisPage />;
            case 'Data Fetching':
                return <DataFetchingPage />;
            default:
                return <DashboardHome />;
        }
    };

    const NavItem = ({ icon, label, isActive, onClick }) => (
        <li
            onClick={onClick}
            className={`flex items-center p-3 my-1 rounded-lg cursor-pointer transition-colors ${
                isActive
                    ? 'bg-gradient-to-r from-blue-50 to-purple-50 text-blue-600'
                    : 'text-gray-600 hover:bg-gray-100'
            }`}
        >
            {icon}
            <span className={`ml-4 font-medium ${isSidebarOpen ? 'inline' : 'hidden'}`}>{label}</span>
        </li>
    );

    const sidebarContent = (
         <div className="flex flex-col h-full">
            {/* Header */}
            <div className="flex items-center justify-between p-4 border-b">
                <div className={`flex items-center ${!isSidebarOpen && 'justify-center w-full'}`}>
                    <div className="w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center">
                        <span className="text-white font-bold">S</span>
                    </div>
                    {isSidebarOpen && <span className="ml-3 text-xl font-bold text-gray-900">SaasApp</span>}
                </div>
                {isSidebarOpen && (
                    <button onClick={() => setSidebarOpen(false)} className="text-gray-500 hover:text-gray-800 hidden lg:block">
                        <ChevronLeft />
                    </button>
                )}
            </div>

            {/* Navigation */}
            <nav className="flex-grow px-2 py-4">
                <ul>
                    <NavItem icon={<BarChart2 size={20} />} label="Dashboard" isActive={activePage === 'Dashboard'} onClick={() => setActivePage('Dashboard')} />
                    <NavItem icon={<MessageSquare size={20} />} label="Chat Agent" isActive={activePage === 'Chat Agent'} onClick={() => setActivePage('Chat Agent')} />
                    <NavItem icon={<Search size={20} />} label="Agent Analysis" isActive={activePage === 'Agent Analysis'} onClick={() => setActivePage('Agent Analysis')} />
                    <NavItem icon={<Database size={20} />} label="Data Fetching" isActive={activePage === 'Data Fetching'} onClick={() => setActivePage('Data Fetching')} />
                </ul>
            </nav>

            {/* Footer */}
            <div className="px-2 py-4 border-t">
                <ul>
                    <NavItem icon={<Settings size={20} />} label="Settings" />
                </ul>
                <div className="p-3 mt-4 rounded-lg bg-gray-100 flex items-center">
                    <img src="https://placehold.co/40x40/E2E8F0/4A5568?text=U" alt="User" className="w-10 h-10 rounded-full" />
                    {isSidebarOpen && (
                        <div className="ml-3">
                            <p className="font-semibold text-sm">User Name</p>
                            <p className="text-xs text-gray-500">user@example.com</p>
                        </div>
                    )}
                </div>
                 <button onClick={handleSignOut} className="w-full flex items-center p-3 mt-2 rounded-lg cursor-pointer transition-colors text-gray-600 hover:bg-red-100 hover:text-red-600">
                    <LogOut size={20} />
                    <span className={`ml-4 font-medium ${isSidebarOpen ? 'inline' : 'hidden'}`}>Sign Out</span>
                </button>
            </div>
        </div>
    );

    if (!isLoggedIn) {
        return <SignInPage onSignIn={handleSignIn} />;
    }

    return (
        <div className="flex h-screen bg-gray-50">
            {/* Desktop Sidebar */}
            <aside className={`bg-white border-r transition-all duration-300 ease-in-out hidden lg:block ${isSidebarOpen ? 'w-64' : 'w-20'}`}>
                {sidebarContent}
            </aside>
            
             {/* Mobile Sidebar */}
            <div className={`fixed inset-0 z-40 lg:hidden ${isMobileMenuOpen ? 'block' : 'hidden'}`}>
                <div className="fixed inset-0 bg-black opacity-30" onClick={() => setMobileMenuOpen(false)}></div>
                <aside className={`absolute top-0 left-0 h-full bg-white w-64 z-50 transition-transform duration-300 ease-in-out ${isMobileMenuOpen ? 'translate-x-0' : '-translate-x-full'}`}>
                    {sidebarContent}
                </aside>
            </div>


            {/* Main Content */}
            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="flex items-center justify-between p-4 border-b bg-white">
                    <div className="flex items-center">
                        <button onClick={() => setSidebarOpen(!isSidebarOpen)} className="text-gray-500 hover:text-gray-800 hidden lg:block">
                            {isSidebarOpen ? <ChevronLeft /> : <ChevronRight />}
                        </button>
                         <button onClick={() => setMobileMenuOpen(true)} className="text-gray-500 hover:text-gray-800 lg:hidden">
                            <Menu />
                        </button>
                    </div>
                    <div className="flex items-center gap-4">
                        <button className="text-gray-500 hover:text-gray-800">
                            <Bell size={20} />
                        </button>
                        <img src="https://placehold.co/32x32/E2E8F0/4A5568?text=U" alt="User" className="w-8 h-8 rounded-full" />
                    </div>
                </header>
                <main className="flex-1 overflow-x-hidden overflow-y-auto p-8">
                    {renderPage()}
                </main>
            </div>
        </div>
    );
};

export default Dashboard;